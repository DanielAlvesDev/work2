#include <iostream>
#include <string>
#include <vector>

using std::cout; using std::cin;
using std::endl; using std::string;
using std::vector;

struct ListNode {
    struct ListNode *next = nullptr;
    string data;
} typedef ListNode;

class Stack {
public:
    explicit Stack(string data) {
        top = new ListNode;
        top->data = std::move(data);
        top->next = nullptr;
    };

    ListNode *push(string data);
    void printNodes();

private:
    ListNode *top = nullptr;
};

ListNode *Stack::push(string data) {
    auto new_node = new ListNode;
    new_node->data = std::move(data);
    new_node->next = top;
    top = new_node;
    return top;
}

void Stack::printNodes() {
    auto count = 0;
    auto tmp = top;
    while (tmp){
        cout << "node " << count << " - data: " << tmp->data << endl;
        tmp = tmp->next;
        count++;
    }
}

int main() {
    vector<string> data_set = { "Precise", "Quantal",
                                "Saucy",  "Raring"};

    Stack s1("Xenial");

    for (const auto &item : data_set) {
        s1.push(item);
    }
    s1.printNodes();

    return EXIT_SUCCESS;
}
